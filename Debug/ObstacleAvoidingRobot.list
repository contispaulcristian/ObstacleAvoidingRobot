
ObstacleAvoidingRobot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000061c  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007e0  080007e8  000017e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007e0  080007e0  000017e8  2**0
                  CONTENTS
  4 .ARM          00000000  080007e0  080007e0  000017e8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007e0  080007e8  000017e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007e0  080007e0  000017e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080007e4  080007e4  000017e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000017e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007e8  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007e8  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000017e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a9d  00000000  00000000  00001818  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000031f  00000000  00000000  000022b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000e8  00000000  00000000  000025d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000009e  00000000  00000000  000026c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000166b  00000000  00000000  0000275e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013bb  00000000  00000000  00003dc9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000056a6  00000000  00000000  00005184  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000a82a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000298  00000000  00000000  0000a870  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000052  00000000  00000000  0000ab08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080007c8 	.word	0x080007c8

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080007c8 	.word	0x080007c8

08000204 <test_GPIO_config>:
/*************************************************************************************************************************************************/
void sw_delay(void);
/*************************************************************************************************************************************************/

void test_GPIO_config(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GPIO_Handle_t GpioBtn;

		/* led gpio configuration */
		GpioLed.pGPIOx = GPIOA;
 800020a:	4b11      	ldr	r3, [pc, #68]	@ (8000250 <test_GPIO_config+0x4c>)
 800020c:	60fb      	str	r3, [r7, #12]
		GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800020e:	2305      	movs	r3, #5
 8000210:	743b      	strb	r3, [r7, #16]
		GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000212:	2301      	movs	r3, #1
 8000214:	747b      	strb	r3, [r7, #17]
		GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000216:	2302      	movs	r3, #2
 8000218:	74bb      	strb	r3, [r7, #18]
		GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800021a:	2300      	movs	r3, #0
 800021c:	753b      	strb	r3, [r7, #20]
		GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021e:	2300      	movs	r3, #0
 8000220:	74fb      	strb	r3, [r7, #19]

		GPIO_Init(&GpioLed);
 8000222:	f107 030c 	add.w	r3, r7, #12
 8000226:	4618      	mov	r0, r3
 8000228:	f000 f8b2 	bl	8000390 <GPIO_Init>

		/* button gpio configuration */
		GpioBtn.pGPIOx = GPIOC;
 800022c:	4b09      	ldr	r3, [pc, #36]	@ (8000254 <test_GPIO_config+0x50>)
 800022e:	603b      	str	r3, [r7, #0]
		GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000230:	230d      	movs	r3, #13
 8000232:	713b      	strb	r3, [r7, #4]
		GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000234:	2300      	movs	r3, #0
 8000236:	717b      	strb	r3, [r7, #5]
		GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000238:	2302      	movs	r3, #2
 800023a:	71bb      	strb	r3, [r7, #6]
		GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800023c:	2300      	movs	r3, #0
 800023e:	71fb      	strb	r3, [r7, #7]

		GPIO_Init(&GpioBtn);
 8000240:	463b      	mov	r3, r7
 8000242:	4618      	mov	r0, r3
 8000244:	f000 f8a4 	bl	8000390 <GPIO_Init>
}
 8000248:	bf00      	nop
 800024a:	3718      	adds	r7, #24
 800024c:	46bd      	mov	sp, r7
 800024e:	bd80      	pop	{r7, pc}
 8000250:	40020000 	.word	0x40020000
 8000254:	40020800 	.word	0x40020800

08000258 <test_GPIO_blink>:

void test_GPIO_blink(void)
{
 8000258:	b580      	push	{r7, lr}
 800025a:	af00      	add	r7, sp, #0
	if((GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13)) == BTN_PRESSED)
 800025c:	210d      	movs	r1, #13
 800025e:	4807      	ldr	r0, [pc, #28]	@ (800027c <test_GPIO_blink+0x24>)
 8000260:	f000 fa32 	bl	80006c8 <GPIO_ReadFromInputPin>
 8000264:	4603      	mov	r3, r0
 8000266:	2b00      	cmp	r3, #0
 8000268:	d105      	bne.n	8000276 <test_GPIO_blink+0x1e>
	{
		sw_delay();
 800026a:	f000 f80b 	bl	8000284 <sw_delay>
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800026e:	2105      	movs	r1, #5
 8000270:	4803      	ldr	r0, [pc, #12]	@ (8000280 <test_GPIO_blink+0x28>)
 8000272:	f000 fa3f 	bl	80006f4 <GPIO_ToggleOutputPin>
	}
}
 8000276:	bf00      	nop
 8000278:	bd80      	pop	{r7, pc}
 800027a:	bf00      	nop
 800027c:	40020800 	.word	0x40020800
 8000280:	40020000 	.word	0x40020000

08000284 <sw_delay>:

void sw_delay(void)
{
 8000284:	b480      	push	{r7}
 8000286:	b083      	sub	sp, #12
 8000288:	af00      	add	r7, sp, #0
	for(uint32_t count = 0 ; count < 500000; count++);
 800028a:	2300      	movs	r3, #0
 800028c:	607b      	str	r3, [r7, #4]
 800028e:	e002      	b.n	8000296 <sw_delay+0x12>
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	3301      	adds	r3, #1
 8000294:	607b      	str	r3, [r7, #4]
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a04      	ldr	r2, [pc, #16]	@ (80002ac <sw_delay+0x28>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d9f8      	bls.n	8000290 <sw_delay+0xc>
}
 800029e:	bf00      	nop
 80002a0:	bf00      	nop
 80002a2:	370c      	adds	r7, #12
 80002a4:	46bd      	mov	sp, r7
 80002a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002aa:	4770      	bx	lr
 80002ac:	0007a11f 	.word	0x0007a11f

080002b0 <GPIO_PeriClockControl>:
 * @return						- none
 *
 * @note						- none
 *************************************************************************************************************************************************/
void GPIO_PeriClockControl (GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	460b      	mov	r3, r1
 80002ba:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 80002bc:	78fb      	ldrb	r3, [r7, #3]
 80002be:	2b01      	cmp	r3, #1
 80002c0:	d12b      	bne.n	800031a <GPIO_PeriClockControl+0x6a>
    {
        if (pGPIOx == GPIOA)
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a2d      	ldr	r2, [pc, #180]	@ (800037c <GPIO_PeriClockControl+0xcc>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d106      	bne.n	80002d8 <GPIO_PeriClockControl+0x28>
        {
        	GPIOA_PCLK_EN();
 80002ca:	4b2d      	ldr	r3, [pc, #180]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 80002cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002ce:	4a2c      	ldr	r2, [pc, #176]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 80002d0:	f043 0301 	orr.w	r3, r3, #1
 80002d4:	6313      	str	r3, [r2, #48]	@ 0x30
		else if (pGPIOx == GPIOD)
		{
			GPIOD_PCLK_DI();
		}
    }
}
 80002d6:	e04b      	b.n	8000370 <GPIO_PeriClockControl+0xc0>
        else if (pGPIOx == GPIOB)
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a2a      	ldr	r2, [pc, #168]	@ (8000384 <GPIO_PeriClockControl+0xd4>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d106      	bne.n	80002ee <GPIO_PeriClockControl+0x3e>
        	GPIOB_PCLK_EN();
 80002e0:	4b27      	ldr	r3, [pc, #156]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 80002e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002e4:	4a26      	ldr	r2, [pc, #152]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 80002e6:	f043 0302 	orr.w	r3, r3, #2
 80002ea:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002ec:	e040      	b.n	8000370 <GPIO_PeriClockControl+0xc0>
        else if (pGPIOx == GPIOC)
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4a25      	ldr	r2, [pc, #148]	@ (8000388 <GPIO_PeriClockControl+0xd8>)
 80002f2:	4293      	cmp	r3, r2
 80002f4:	d106      	bne.n	8000304 <GPIO_PeriClockControl+0x54>
        	GPIOC_PCLK_EN();
 80002f6:	4b22      	ldr	r3, [pc, #136]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 80002f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002fa:	4a21      	ldr	r2, [pc, #132]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 80002fc:	f043 0304 	orr.w	r3, r3, #4
 8000300:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000302:	e035      	b.n	8000370 <GPIO_PeriClockControl+0xc0>
        else if (pGPIOx == GPIOD)
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a21      	ldr	r2, [pc, #132]	@ (800038c <GPIO_PeriClockControl+0xdc>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d131      	bne.n	8000370 <GPIO_PeriClockControl+0xc0>
        	GPIOD_PCLK_EN();
 800030c:	4b1c      	ldr	r3, [pc, #112]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 800030e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000310:	4a1b      	ldr	r2, [pc, #108]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 8000312:	f043 0308 	orr.w	r3, r3, #8
 8000316:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000318:	e02a      	b.n	8000370 <GPIO_PeriClockControl+0xc0>
		if (pGPIOx == GPIOA)
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	4a17      	ldr	r2, [pc, #92]	@ (800037c <GPIO_PeriClockControl+0xcc>)
 800031e:	4293      	cmp	r3, r2
 8000320:	d106      	bne.n	8000330 <GPIO_PeriClockControl+0x80>
			GPIOA_PCLK_DI();
 8000322:	4b17      	ldr	r3, [pc, #92]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 8000324:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000326:	4a16      	ldr	r2, [pc, #88]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 8000328:	f023 0301 	bic.w	r3, r3, #1
 800032c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800032e:	e01f      	b.n	8000370 <GPIO_PeriClockControl+0xc0>
		else if (pGPIOx == GPIOB)
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	4a14      	ldr	r2, [pc, #80]	@ (8000384 <GPIO_PeriClockControl+0xd4>)
 8000334:	4293      	cmp	r3, r2
 8000336:	d106      	bne.n	8000346 <GPIO_PeriClockControl+0x96>
			GPIOB_PCLK_DI();
 8000338:	4b11      	ldr	r3, [pc, #68]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 800033a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800033c:	4a10      	ldr	r2, [pc, #64]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 800033e:	f023 0302 	bic.w	r3, r3, #2
 8000342:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000344:	e014      	b.n	8000370 <GPIO_PeriClockControl+0xc0>
		else if (pGPIOx == GPIOC)
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	4a0f      	ldr	r2, [pc, #60]	@ (8000388 <GPIO_PeriClockControl+0xd8>)
 800034a:	4293      	cmp	r3, r2
 800034c:	d106      	bne.n	800035c <GPIO_PeriClockControl+0xac>
			GPIOC_PCLK_DI();
 800034e:	4b0c      	ldr	r3, [pc, #48]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 8000350:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000352:	4a0b      	ldr	r2, [pc, #44]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 8000354:	f023 0304 	bic.w	r3, r3, #4
 8000358:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800035a:	e009      	b.n	8000370 <GPIO_PeriClockControl+0xc0>
		else if (pGPIOx == GPIOD)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	4a0b      	ldr	r2, [pc, #44]	@ (800038c <GPIO_PeriClockControl+0xdc>)
 8000360:	4293      	cmp	r3, r2
 8000362:	d105      	bne.n	8000370 <GPIO_PeriClockControl+0xc0>
			GPIOD_PCLK_DI();
 8000364:	4b06      	ldr	r3, [pc, #24]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 8000366:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000368:	4a05      	ldr	r2, [pc, #20]	@ (8000380 <GPIO_PeriClockControl+0xd0>)
 800036a:	f023 0308 	bic.w	r3, r3, #8
 800036e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000370:	bf00      	nop
 8000372:	370c      	adds	r7, #12
 8000374:	46bd      	mov	sp, r7
 8000376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037a:	4770      	bx	lr
 800037c:	40020000 	.word	0x40020000
 8000380:	40023800 	.word	0x40023800
 8000384:	40020400 	.word	0x40020400
 8000388:	40020800 	.word	0x40020800
 800038c:	40020c00 	.word	0x40020c00

08000390 <GPIO_Init>:
 * @return						- none
 *
 * @note						- none
 *************************************************************************************************************************************************/
void GPIO_Init (GPIO_Handle_t *pGPIOHandle)
{
 8000390:	b580      	push	{r7, lr}
 8000392:	b086      	sub	sp, #24
 8000394:	af00      	add	r7, sp, #0
 8000396:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000398:	2300      	movs	r3, #0
 800039a:	617b      	str	r3, [r7, #20]
	uint8_t temp1 = 0;
 800039c:	2300      	movs	r3, #0
 800039e:	74fb      	strb	r3, [r7, #19]
	uint8_t temp2 = 0;
 80003a0:	2300      	movs	r3, #0
 80003a2:	74bb      	strb	r3, [r7, #18]
	uint8_t portcode = 0;
 80003a4:	2300      	movs	r3, #0
 80003a6:	747b      	strb	r3, [r7, #17]

	/* Enable the peripheral clock */
	GPIO_PeriClockControl((pGPIOHandle->pGPIOx), ENABLE);
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	2101      	movs	r1, #1
 80003ae:	4618      	mov	r0, r3
 80003b0:	f7ff ff7e 	bl	80002b0 <GPIO_PeriClockControl>

	/* configure the mode of gpio pin*/
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	795b      	ldrb	r3, [r3, #5]
 80003b8:	2b03      	cmp	r3, #3
 80003ba:	d81f      	bhi.n	80003fc <GPIO_Init+0x6c>
    {
		/* The non interrupt mode */
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	795b      	ldrb	r3, [r3, #5]
 80003c0:	461a      	mov	r2, r3
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	791b      	ldrb	r3, [r3, #4]
 80003c6:	005b      	lsls	r3, r3, #1
 80003c8:	fa02 f303 	lsl.w	r3, r2, r3
 80003cc:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); /* clearing bits before setting it*/
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	681a      	ldr	r2, [r3, #0]
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	791b      	ldrb	r3, [r3, #4]
 80003d8:	4619      	mov	r1, r3
 80003da:	2303      	movs	r3, #3
 80003dc:	408b      	lsls	r3, r1
 80003de:	43db      	mvns	r3, r3
 80003e0:	4619      	mov	r1, r3
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	400a      	ands	r2, r1
 80003e8:	601a      	str	r2, [r3, #0]
      	pGPIOHandle->pGPIOx->MODER |= temp; /* setting the bit*/
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	6819      	ldr	r1, [r3, #0]
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	697a      	ldr	r2, [r7, #20]
 80003f6:	430a      	orrs	r2, r1
 80003f8:	601a      	str	r2, [r3, #0]
 80003fa:	e0c2      	b.n	8000582 <GPIO_Init+0x1f2>
    }
	else
    {

		/* The interrupt mode */
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	795b      	ldrb	r3, [r3, #5]
 8000400:	2b04      	cmp	r3, #4
 8000402:	d117      	bne.n	8000434 <GPIO_Init+0xa4>
		{
			/* Configure the FTSR */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000404:	4b47      	ldr	r3, [pc, #284]	@ (8000524 <GPIO_Init+0x194>)
 8000406:	68db      	ldr	r3, [r3, #12]
 8000408:	687a      	ldr	r2, [r7, #4]
 800040a:	7912      	ldrb	r2, [r2, #4]
 800040c:	4611      	mov	r1, r2
 800040e:	2201      	movs	r2, #1
 8000410:	408a      	lsls	r2, r1
 8000412:	4611      	mov	r1, r2
 8000414:	4a43      	ldr	r2, [pc, #268]	@ (8000524 <GPIO_Init+0x194>)
 8000416:	430b      	orrs	r3, r1
 8000418:	60d3      	str	r3, [r2, #12]
			/* Clear the coresponding RTSR bit*/
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800041a:	4b42      	ldr	r3, [pc, #264]	@ (8000524 <GPIO_Init+0x194>)
 800041c:	689b      	ldr	r3, [r3, #8]
 800041e:	687a      	ldr	r2, [r7, #4]
 8000420:	7912      	ldrb	r2, [r2, #4]
 8000422:	4611      	mov	r1, r2
 8000424:	2201      	movs	r2, #1
 8000426:	408a      	lsls	r2, r1
 8000428:	43d2      	mvns	r2, r2
 800042a:	4611      	mov	r1, r2
 800042c:	4a3d      	ldr	r2, [pc, #244]	@ (8000524 <GPIO_Init+0x194>)
 800042e:	400b      	ands	r3, r1
 8000430:	6093      	str	r3, [r2, #8]
 8000432:	e035      	b.n	80004a0 <GPIO_Init+0x110>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	795b      	ldrb	r3, [r3, #5]
 8000438:	2b05      	cmp	r3, #5
 800043a:	d117      	bne.n	800046c <GPIO_Init+0xdc>
		{
			/* Configure the RTSR */
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800043c:	4b39      	ldr	r3, [pc, #228]	@ (8000524 <GPIO_Init+0x194>)
 800043e:	689b      	ldr	r3, [r3, #8]
 8000440:	687a      	ldr	r2, [r7, #4]
 8000442:	7912      	ldrb	r2, [r2, #4]
 8000444:	4611      	mov	r1, r2
 8000446:	2201      	movs	r2, #1
 8000448:	408a      	lsls	r2, r1
 800044a:	4611      	mov	r1, r2
 800044c:	4a35      	ldr	r2, [pc, #212]	@ (8000524 <GPIO_Init+0x194>)
 800044e:	430b      	orrs	r3, r1
 8000450:	6093      	str	r3, [r2, #8]
			/* Clear the coresponding RTSR bit*/
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000452:	4b34      	ldr	r3, [pc, #208]	@ (8000524 <GPIO_Init+0x194>)
 8000454:	68db      	ldr	r3, [r3, #12]
 8000456:	687a      	ldr	r2, [r7, #4]
 8000458:	7912      	ldrb	r2, [r2, #4]
 800045a:	4611      	mov	r1, r2
 800045c:	2201      	movs	r2, #1
 800045e:	408a      	lsls	r2, r1
 8000460:	43d2      	mvns	r2, r2
 8000462:	4611      	mov	r1, r2
 8000464:	4a2f      	ldr	r2, [pc, #188]	@ (8000524 <GPIO_Init+0x194>)
 8000466:	400b      	ands	r3, r1
 8000468:	60d3      	str	r3, [r2, #12]
 800046a:	e019      	b.n	80004a0 <GPIO_Init+0x110>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	795b      	ldrb	r3, [r3, #5]
 8000470:	2b06      	cmp	r3, #6
 8000472:	d115      	bne.n	80004a0 <GPIO_Init+0x110>
		{
			/* Configure both RFSR and RTSR */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000474:	4b2b      	ldr	r3, [pc, #172]	@ (8000524 <GPIO_Init+0x194>)
 8000476:	68db      	ldr	r3, [r3, #12]
 8000478:	687a      	ldr	r2, [r7, #4]
 800047a:	7912      	ldrb	r2, [r2, #4]
 800047c:	4611      	mov	r1, r2
 800047e:	2201      	movs	r2, #1
 8000480:	408a      	lsls	r2, r1
 8000482:	4611      	mov	r1, r2
 8000484:	4a27      	ldr	r2, [pc, #156]	@ (8000524 <GPIO_Init+0x194>)
 8000486:	430b      	orrs	r3, r1
 8000488:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800048a:	4b26      	ldr	r3, [pc, #152]	@ (8000524 <GPIO_Init+0x194>)
 800048c:	689b      	ldr	r3, [r3, #8]
 800048e:	687a      	ldr	r2, [r7, #4]
 8000490:	7912      	ldrb	r2, [r2, #4]
 8000492:	4611      	mov	r1, r2
 8000494:	2201      	movs	r2, #1
 8000496:	408a      	lsls	r2, r1
 8000498:	4611      	mov	r1, r2
 800049a:	4a22      	ldr	r2, [pc, #136]	@ (8000524 <GPIO_Init+0x194>)
 800049c:	430b      	orrs	r3, r1
 800049e:	6093      	str	r3, [r2, #8]
		}
		/* configure the GPIO port selection in SYSCFG_EXTICR */
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	791b      	ldrb	r3, [r3, #4]
 80004a4:	089b      	lsrs	r3, r3, #2
 80004a6:	74fb      	strb	r3, [r7, #19]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	791b      	ldrb	r3, [r3, #4]
 80004ac:	f003 0303 	and.w	r3, r3, #3
 80004b0:	74bb      	strb	r3, [r7, #18]
		portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	4a1c      	ldr	r2, [pc, #112]	@ (8000528 <GPIO_Init+0x198>)
 80004b8:	4293      	cmp	r3, r2
 80004ba:	d045      	beq.n	8000548 <GPIO_Init+0x1b8>
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	4a1a      	ldr	r2, [pc, #104]	@ (800052c <GPIO_Init+0x19c>)
 80004c2:	4293      	cmp	r3, r2
 80004c4:	d02b      	beq.n	800051e <GPIO_Init+0x18e>
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	4a19      	ldr	r2, [pc, #100]	@ (8000530 <GPIO_Init+0x1a0>)
 80004cc:	4293      	cmp	r3, r2
 80004ce:	d024      	beq.n	800051a <GPIO_Init+0x18a>
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	4a17      	ldr	r2, [pc, #92]	@ (8000534 <GPIO_Init+0x1a4>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d01d      	beq.n	8000516 <GPIO_Init+0x186>
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	4a16      	ldr	r2, [pc, #88]	@ (8000538 <GPIO_Init+0x1a8>)
 80004e0:	4293      	cmp	r3, r2
 80004e2:	d016      	beq.n	8000512 <GPIO_Init+0x182>
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	4a14      	ldr	r2, [pc, #80]	@ (800053c <GPIO_Init+0x1ac>)
 80004ea:	4293      	cmp	r3, r2
 80004ec:	d00f      	beq.n	800050e <GPIO_Init+0x17e>
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	4a13      	ldr	r2, [pc, #76]	@ (8000540 <GPIO_Init+0x1b0>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d008      	beq.n	800050a <GPIO_Init+0x17a>
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	4a11      	ldr	r2, [pc, #68]	@ (8000544 <GPIO_Init+0x1b4>)
 80004fe:	4293      	cmp	r3, r2
 8000500:	d101      	bne.n	8000506 <GPIO_Init+0x176>
 8000502:	2307      	movs	r3, #7
 8000504:	e021      	b.n	800054a <GPIO_Init+0x1ba>
 8000506:	2300      	movs	r3, #0
 8000508:	e01f      	b.n	800054a <GPIO_Init+0x1ba>
 800050a:	2306      	movs	r3, #6
 800050c:	e01d      	b.n	800054a <GPIO_Init+0x1ba>
 800050e:	2305      	movs	r3, #5
 8000510:	e01b      	b.n	800054a <GPIO_Init+0x1ba>
 8000512:	2304      	movs	r3, #4
 8000514:	e019      	b.n	800054a <GPIO_Init+0x1ba>
 8000516:	2303      	movs	r3, #3
 8000518:	e017      	b.n	800054a <GPIO_Init+0x1ba>
 800051a:	2302      	movs	r3, #2
 800051c:	e015      	b.n	800054a <GPIO_Init+0x1ba>
 800051e:	2301      	movs	r3, #1
 8000520:	e013      	b.n	800054a <GPIO_Init+0x1ba>
 8000522:	bf00      	nop
 8000524:	40013c00 	.word	0x40013c00
 8000528:	40020000 	.word	0x40020000
 800052c:	40020400 	.word	0x40020400
 8000530:	40020800 	.word	0x40020800
 8000534:	40020c00 	.word	0x40020c00
 8000538:	40021000 	.word	0x40021000
 800053c:	40021400 	.word	0x40021400
 8000540:	40021800 	.word	0x40021800
 8000544:	40021c00 	.word	0x40021c00
 8000548:	2300      	movs	r3, #0
 800054a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800054c:	4b5b      	ldr	r3, [pc, #364]	@ (80006bc <GPIO_Init+0x32c>)
 800054e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000550:	4a5a      	ldr	r2, [pc, #360]	@ (80006bc <GPIO_Init+0x32c>)
 8000552:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000556:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << temp2 * 4;
 8000558:	7c7a      	ldrb	r2, [r7, #17]
 800055a:	7cbb      	ldrb	r3, [r7, #18]
 800055c:	009b      	lsls	r3, r3, #2
 800055e:	fa02 f103 	lsl.w	r1, r2, r3
 8000562:	4a57      	ldr	r2, [pc, #348]	@ (80006c0 <GPIO_Init+0x330>)
 8000564:	7cfb      	ldrb	r3, [r7, #19]
 8000566:	3302      	adds	r3, #2
 8000568:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		/* enable the exti interrupt delivery using IMR */
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800056c:	4b55      	ldr	r3, [pc, #340]	@ (80006c4 <GPIO_Init+0x334>)
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	687a      	ldr	r2, [r7, #4]
 8000572:	7912      	ldrb	r2, [r2, #4]
 8000574:	4611      	mov	r1, r2
 8000576:	2201      	movs	r2, #1
 8000578:	408a      	lsls	r2, r1
 800057a:	4611      	mov	r1, r2
 800057c:	4a51      	ldr	r2, [pc, #324]	@ (80006c4 <GPIO_Init+0x334>)
 800057e:	430b      	orrs	r3, r1
 8000580:	6013      	str	r3, [r2, #0]
    }
	/* configure the speed*/
	temp = 0;
 8000582:	2300      	movs	r3, #0
 8000584:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	799b      	ldrb	r3, [r3, #6]
 800058a:	461a      	mov	r2, r3
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	791b      	ldrb	r3, [r3, #4]
 8000590:	005b      	lsls	r3, r3, #1
 8000592:	fa02 f303 	lsl.w	r3, r2, r3
 8000596:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	689a      	ldr	r2, [r3, #8]
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	791b      	ldrb	r3, [r3, #4]
 80005a2:	4619      	mov	r1, r3
 80005a4:	2303      	movs	r3, #3
 80005a6:	408b      	lsls	r3, r1
 80005a8:	43db      	mvns	r3, r3
 80005aa:	4619      	mov	r1, r3
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	400a      	ands	r2, r1
 80005b2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	6899      	ldr	r1, [r3, #8]
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	697a      	ldr	r2, [r7, #20]
 80005c0:	430a      	orrs	r2, r1
 80005c2:	609a      	str	r2, [r3, #8]
	/* configure the pupd settings*/
	temp = 0;
 80005c4:	2300      	movs	r3, #0
 80005c6:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	79db      	ldrb	r3, [r3, #7]
 80005cc:	461a      	mov	r2, r3
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	791b      	ldrb	r3, [r3, #4]
 80005d2:	005b      	lsls	r3, r3, #1
 80005d4:	fa02 f303 	lsl.w	r3, r2, r3
 80005d8:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	68da      	ldr	r2, [r3, #12]
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	791b      	ldrb	r3, [r3, #4]
 80005e4:	4619      	mov	r1, r3
 80005e6:	2303      	movs	r3, #3
 80005e8:	408b      	lsls	r3, r1
 80005ea:	43db      	mvns	r3, r3
 80005ec:	4619      	mov	r1, r3
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	400a      	ands	r2, r1
 80005f4:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	68d9      	ldr	r1, [r3, #12]
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	697a      	ldr	r2, [r7, #20]
 8000602:	430a      	orrs	r2, r1
 8000604:	60da      	str	r2, [r3, #12]

	/* configure the optype*/ //TODO: configure only in output mode
	temp = 0;
 8000606:	2300      	movs	r3, #0
 8000608:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	7a1b      	ldrb	r3, [r3, #8]
 800060e:	461a      	mov	r2, r3
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	791b      	ldrb	r3, [r3, #4]
 8000614:	005b      	lsls	r3, r3, #1
 8000616:	fa02 f303 	lsl.w	r3, r2, r3
 800061a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	685a      	ldr	r2, [r3, #4]
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	791b      	ldrb	r3, [r3, #4]
 8000626:	4619      	mov	r1, r3
 8000628:	2303      	movs	r3, #3
 800062a:	408b      	lsls	r3, r1
 800062c:	43db      	mvns	r3, r3
 800062e:	4619      	mov	r1, r3
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	400a      	ands	r2, r1
 8000636:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	6859      	ldr	r1, [r3, #4]
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	697a      	ldr	r2, [r7, #20]
 8000644:	430a      	orrs	r2, r1
 8000646:	605a      	str	r2, [r3, #4]
	/* configure the alt functionality*/
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	795b      	ldrb	r3, [r3, #5]
 800064c:	2b02      	cmp	r3, #2
 800064e:	d131      	bne.n	80006b4 <GPIO_Init+0x324>
    {
		uint8_t temp1;
		uint8_t temp2;
		/* selecting the register AFR[0] (AFRL) or AFR[1] (AFRH) */
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	791b      	ldrb	r3, [r3, #4]
 8000654:	08db      	lsrs	r3, r3, #3
 8000656:	743b      	strb	r3, [r7, #16]
		/* selecting the bit position*/
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	791b      	ldrb	r3, [r3, #4]
 800065c:	f003 0307 	and.w	r3, r3, #7
 8000660:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	7c3a      	ldrb	r2, [r7, #16]
 8000668:	3208      	adds	r2, #8
 800066a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800066e:	7bfb      	ldrb	r3, [r7, #15]
 8000670:	009b      	lsls	r3, r3, #2
 8000672:	220f      	movs	r2, #15
 8000674:	fa02 f303 	lsl.w	r3, r2, r3
 8000678:	43db      	mvns	r3, r3
 800067a:	4618      	mov	r0, r3
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	681b      	ldr	r3, [r3, #0]
 8000680:	7c3a      	ldrb	r2, [r7, #16]
 8000682:	4001      	ands	r1, r0
 8000684:	3208      	adds	r2, #8
 8000686:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	681b      	ldr	r3, [r3, #0]
 800068e:	7c3a      	ldrb	r2, [r7, #16]
 8000690:	3208      	adds	r2, #8
 8000692:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	7a5b      	ldrb	r3, [r3, #9]
 800069a:	461a      	mov	r2, r3
 800069c:	7bfb      	ldrb	r3, [r7, #15]
 800069e:	009b      	lsls	r3, r3, #2
 80006a0:	fa02 f303 	lsl.w	r3, r2, r3
 80006a4:	4618      	mov	r0, r3
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	7c3a      	ldrb	r2, [r7, #16]
 80006ac:	4301      	orrs	r1, r0
 80006ae:	3208      	adds	r2, #8
 80006b0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    }
}
 80006b4:	bf00      	nop
 80006b6:	3718      	adds	r7, #24
 80006b8:	46bd      	mov	sp, r7
 80006ba:	bd80      	pop	{r7, pc}
 80006bc:	40023800 	.word	0x40023800
 80006c0:	40013800 	.word	0x40013800
 80006c4:	40013c00 	.word	0x40013c00

080006c8 <GPIO_ReadFromInputPin>:
 * @return						- 0 or 1
 *
 * @note						- none
 *************************************************************************************************************************************************/
uint8_t GPIO_ReadFromInputPin (GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006c8:	b480      	push	{r7}
 80006ca:	b085      	sub	sp, #20
 80006cc:	af00      	add	r7, sp, #0
 80006ce:	6078      	str	r0, [r7, #4]
 80006d0:	460b      	mov	r3, r1
 80006d2:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t) ((pGPIOx->IDR >> PinNumber) & 0x00000001);
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	691a      	ldr	r2, [r3, #16]
 80006d8:	78fb      	ldrb	r3, [r7, #3]
 80006da:	fa22 f303 	lsr.w	r3, r2, r3
 80006de:	b2db      	uxtb	r3, r3
 80006e0:	f003 0301 	and.w	r3, r3, #1
 80006e4:	73fb      	strb	r3, [r7, #15]
	return value;
 80006e6:	7bfb      	ldrb	r3, [r7, #15]
}
 80006e8:	4618      	mov	r0, r3
 80006ea:	3714      	adds	r7, #20
 80006ec:	46bd      	mov	sp, r7
 80006ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006f2:	4770      	bx	lr

080006f4 <GPIO_ToggleOutputPin>:
 * @return						- none
 *
 * @note						- none
 *************************************************************************************************************************************************/
void GPIO_ToggleOutputPin (GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006f4:	b480      	push	{r7}
 80006f6:	b083      	sub	sp, #12
 80006f8:	af00      	add	r7, sp, #0
 80006fa:	6078      	str	r0, [r7, #4]
 80006fc:	460b      	mov	r3, r1
 80006fe:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	695b      	ldr	r3, [r3, #20]
 8000704:	78fa      	ldrb	r2, [r7, #3]
 8000706:	2101      	movs	r1, #1
 8000708:	fa01 f202 	lsl.w	r2, r1, r2
 800070c:	405a      	eors	r2, r3
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	615a      	str	r2, [r3, #20]
}
 8000712:	bf00      	nop
 8000714:	370c      	adds	r7, #12
 8000716:	46bd      	mov	sp, r7
 8000718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800071c:	4770      	bx	lr

0800071e <main>:

/*************************************************************************************************************************************************/


int main(void)
{
 800071e:	b580      	push	{r7, lr}
 8000720:	af00      	add	r7, sp, #0
	test_GPIO_config();
 8000722:	f7ff fd6f 	bl	8000204 <test_GPIO_config>

    /* Loop forever */
	while(1)
	{
		test_GPIO_blink();
 8000726:	f7ff fd97 	bl	8000258 <test_GPIO_blink>
 800072a:	e7fc      	b.n	8000726 <main+0x8>

0800072c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800072c:	480d      	ldr	r0, [pc, #52]	@ (8000764 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800072e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000730:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000734:	480c      	ldr	r0, [pc, #48]	@ (8000768 <LoopForever+0x6>)
  ldr r1, =_edata
 8000736:	490d      	ldr	r1, [pc, #52]	@ (800076c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000738:	4a0d      	ldr	r2, [pc, #52]	@ (8000770 <LoopForever+0xe>)
  movs r3, #0
 800073a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800073c:	e002      	b.n	8000744 <LoopCopyDataInit>

0800073e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800073e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000740:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000742:	3304      	adds	r3, #4

08000744 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000744:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000746:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000748:	d3f9      	bcc.n	800073e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800074a:	4a0a      	ldr	r2, [pc, #40]	@ (8000774 <LoopForever+0x12>)
  ldr r4, =_ebss
 800074c:	4c0a      	ldr	r4, [pc, #40]	@ (8000778 <LoopForever+0x16>)
  movs r3, #0
 800074e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000750:	e001      	b.n	8000756 <LoopFillZerobss>

08000752 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000752:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000754:	3204      	adds	r2, #4

08000756 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000756:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000758:	d3fb      	bcc.n	8000752 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800075a:	f000 f811 	bl	8000780 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800075e:	f7ff ffde 	bl	800071e <main>

08000762 <LoopForever>:

LoopForever:
  b LoopForever
 8000762:	e7fe      	b.n	8000762 <LoopForever>
  ldr   r0, =_estack
 8000764:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000768:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800076c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000770:	080007e8 	.word	0x080007e8
  ldr r2, =_sbss
 8000774:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000778:	2000001c 	.word	0x2000001c

0800077c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800077c:	e7fe      	b.n	800077c <ADC_IRQHandler>
	...

08000780 <__libc_init_array>:
 8000780:	b570      	push	{r4, r5, r6, lr}
 8000782:	4d0d      	ldr	r5, [pc, #52]	@ (80007b8 <__libc_init_array+0x38>)
 8000784:	4c0d      	ldr	r4, [pc, #52]	@ (80007bc <__libc_init_array+0x3c>)
 8000786:	1b64      	subs	r4, r4, r5
 8000788:	10a4      	asrs	r4, r4, #2
 800078a:	2600      	movs	r6, #0
 800078c:	42a6      	cmp	r6, r4
 800078e:	d109      	bne.n	80007a4 <__libc_init_array+0x24>
 8000790:	4d0b      	ldr	r5, [pc, #44]	@ (80007c0 <__libc_init_array+0x40>)
 8000792:	4c0c      	ldr	r4, [pc, #48]	@ (80007c4 <__libc_init_array+0x44>)
 8000794:	f000 f818 	bl	80007c8 <_init>
 8000798:	1b64      	subs	r4, r4, r5
 800079a:	10a4      	asrs	r4, r4, #2
 800079c:	2600      	movs	r6, #0
 800079e:	42a6      	cmp	r6, r4
 80007a0:	d105      	bne.n	80007ae <__libc_init_array+0x2e>
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007a8:	4798      	blx	r3
 80007aa:	3601      	adds	r6, #1
 80007ac:	e7ee      	b.n	800078c <__libc_init_array+0xc>
 80007ae:	f855 3b04 	ldr.w	r3, [r5], #4
 80007b2:	4798      	blx	r3
 80007b4:	3601      	adds	r6, #1
 80007b6:	e7f2      	b.n	800079e <__libc_init_array+0x1e>
 80007b8:	080007e0 	.word	0x080007e0
 80007bc:	080007e0 	.word	0x080007e0
 80007c0:	080007e0 	.word	0x080007e0
 80007c4:	080007e4 	.word	0x080007e4

080007c8 <_init>:
 80007c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ca:	bf00      	nop
 80007cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007ce:	bc08      	pop	{r3}
 80007d0:	469e      	mov	lr, r3
 80007d2:	4770      	bx	lr

080007d4 <_fini>:
 80007d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007d6:	bf00      	nop
 80007d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007da:	bc08      	pop	{r3}
 80007dc:	469e      	mov	lr, r3
 80007de:	4770      	bx	lr
